type_specifier : LONG;
type_specifier : LONG;
type_specifier : INT;
declaration_specifiers : type_specifier;
declaration_specifiers : type_specifier declaration_specifiers;
declaration_specifiers : type_specifier declaration_specifiers;
direct_declarator : identifier;
declarator : direct_declarator;
constant : INTEGER_CONSTANT;
primary_expression : constant;
postfix_expression : primary_expression;
unary_expression : postfix_expression;
cast_expression : unary_expression;
multiplicative_expression : cast_expression;
additive_expression : multiplicative_expression;
shift_expression : additive_expression;
relational_expression : shift_expression;
equality_expression : relational_expression;
and_expression : equality_expression;
exclusive_or_expression : and_expression;
inclusive_or_expression : exclusive_or_expression;
logical_and_expression : inclusive_or_expression;
logical_or_expression : logical_and_expression;
conditional_expression : logical_or_expression;
assignment_expression : conditional_expression;
initializer : assignment_expression;
init_declarator : declarator ASSIGN initializer;
init_declarator_list : init_declarator;
declaration : declaration_specifiers init_declarator_list SEMI;

external_declaration : declaration;
translation_unit : external_declaration;
type_specifier : INT;
declaration_specifiers : type_specifier;
direct_declarator : identifier;
type_specifier : INT;
declaration_specifiers : type_specifier;
direct_declarator : identifier;
declarator : direct_declarator;
parameter_declaration : declaration_specifiers declarator;
parameter_list : parameter_declaration;
type_specifier : INT;
declaration_specifiers : type_specifier;
direct_declarator : identifier;
declarator : direct_declarator;
parameter_declaration : declaration_specifiers declarator;
parameter_list : parameter_list COMMA parameter_declaration;
type_specifier : LONG;
type_specifier : LONG;
type_specifier : LONG;
